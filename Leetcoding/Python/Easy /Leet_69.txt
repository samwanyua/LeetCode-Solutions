Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.

You must not use any built-in exponent function or operator.

For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.
 

Example 1:

Input: x = 4
Output: 2
Explanation: The square root of 4 is 2, so we return 2.
Example 2:

Input: x = 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.
 

Constraints:

0 <= x <= 231 - 1

// Thoughts
    Iterate through from 0 to n and round down >> Brute force
    O(sqrt N)

    Use binary search approach >> O(log N)
    check range of 0 to N, find Midpoint,m
    check if m^2 > N >> then not sqrt, then decrease the search space
    search from 0 to m - 1
    check if m^2 < x

